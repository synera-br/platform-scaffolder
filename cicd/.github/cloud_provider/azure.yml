---

  name: terraform-azure
  on:
    workflow_call:
      outputs:
        report:
          description: "The first output string"
          value: ${{ jobs.terraformAzure.outputs.report }}
        kubeconfig:
          description: "The first output string"
          value: ${{ jobs.terraformAzure.outputs.kubeconfig }}
        action:
          description: "Action to terraform"
          value: ${{ jobs.terraformAzure.outputs.action }}
      inputs:
        action:
          description: 'Action to terraform'
          required: false
          type: string
          default: apply
      secrets:
        ARM_SUBSCRIPTION_ID:
          description: 'Azure subscription ID'
          required: true
        ARM_CLIENT_ID:
          description: 'Azure client ID'
          required: true
        ARM_TENANT_ID:
          description: 'Azure tenant ID'
          required: true
        ARM_CLIENT_SECRET:
          description: 'Azure client secret'
          required: true

  jobs:
    terraformAzure:
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      name: terraformAzure
      runs-on: ubuntu-20.04

      outputs:
        report: ${{ steps.report.outputs.REPORT }}
        kubeconfig: ${{ steps.aks_cluster_name.outputs.KUBECONFIG }}
        action: ${{ inputs.action }}
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v1  
          with:
            terraform_wrapper: false

        - name: Terraform Init
          run: terraform init
          working-directory: ./infra/terraform

        - name: Terraform Create a plan
          run: terraform plan -out "tfplan"
          working-directory: ./infra/terraform

        - name: Terraform show a plan
          run: terraform show "tfplan"
          working-directory: ./infra/terraform

        - name: Terraform ${{ inputs.action }} a plan
          run: terraform ${{ inputs.action }} -parallelism=20 --auto-approve
          working-directory: ./infra/terraform

        - name: Terraform graph
          run: |
            terraform graph
          working-directory: ./infra/terraform

        - name: Terraform output kube_config
          id: aks_cluster_name
          run: |
            OUTPUT=$(terraform output -raw kube_config_raw|base64 -w 0)
            echo "::set-output name=KUBECONFIG::$OUTPUT"
          working-directory: ./infra/terraform
